@model COACHME.MODEL.CUSTOM_MODELS.ResetPasswordModel
@{
    ViewBag.Title = "ResetPasswordForm";
}
<meta http-equiv="CACHE-CONTROL" CONTENT="NO-CACHE">
<div class="m-grid m-grid--hor m-grid--root m-page">
    
    <script type="text/javascript">
        function preback() { window.history.forward(); }
        setTimeout("preback()", 0);
        window.onunload = function () { null };
    </script>

    <div class="m-grid__item m-grid__item--fluid m-grid m-grid--hor m-login m-login--signin m-login--2 m-login-2--skin-2" id="m_login" style="background-image: url(../../Content/images/bg-3.jpg);">
        <div class="m-grid__item m-grid__item--fluid	m-login__wrapper">
            <div class="m-login__container">
                @*<div class="m-login__logo">
                        <a href="#">
                            <img src="~/Content/images/login/login_logo.png">
                        </a>
                    </div>*@
                @{
                    Html.RenderPartial("_LogoPartial");
                }
                <!--Start SignUp -->
                <div class="m-login__signin">
                    @*m-login__signup">*@
                    <div class="m-login__head">
                        <h3 class="m-login__title">Reset Your Password</h3>
                    </div>
                    @using (Html.BeginForm("ResetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "m-login__form m-form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.TOKEN_HASH, new { @id = "TOKEN_HASH", @name = "TOKEN_HASH" })
                        @Html.HiddenFor(m => m.EMAIL, new { @id = "EMAIL", @name = "EMAIL" })

                        <div class="form-group m-form__group">
                            <input class="form-control m-input" type="password" placeholder="Password" name="NEW_PASSWORD">

                            @if (ViewBag.FirstCall == true)
                            {

                            }
                            else
                            {
                                @Html.ValidationMessageFor(m => m.NEW_PASSWORD, "", new { @class = "text-danger" })
                            }

                        </div>

                        <div class="form-group m-form__group">
                            <input class="form-control m-input m-login__form-input--last" type="password" placeholder="Confirm Password" name="CONFIRM_NEW_PASSWORD">
                            @Html.ValidationMessageFor(m => m.CONFIRM_NEW_PASSWORD, "", new { @class = "text-danger" })
                        </div>

                        <div class="m-login__form-action">
                            <button type="submit" value="Save" name="buttonType" class="btn btn-focus m-btn m-btn--pill m-btn--custom m-btn--air  m-login__btn">Reset Password</button>&nbsp;&nbsp;

                            <a href="@Url.Action("Login","Account")" class="btn btn-outline-focus m-btn m-btn--pill m-btn--custom  m-login__btn">Cancel</a>
                            @*<button type="button" value="Cancel" name="buttonType" class="btn btn-outline-focus m-btn m-btn--pill m-btn--custom  m-login__btn">
                                Cancel</button>*@
                        </div>
                    }
                </div>
                <!--End SignUp -->

            </div>
        </div>
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
